{
	"info": {
		"_postman_id": "b639a620-79cb-4229-8905-9624224ae7d9",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24656414"
	},
	"item": [
		{
			"name": "HW2",
			"item": [
				{
					"name": "/first",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Проверить, что в body приходит правильный string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/first",
							"host": [
								"{{url}}"
							],
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "user_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Спарсить response body в json\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"var name = jsonData.name;\r",
									"console.log(name)\r",
									"\r",
									"pm.test(\"Проверить, что name в ответе равно name request (name вбить руками)\",function () {\r",
									" pm.expect(name).to.eql(\"Lena\")\r",
									"\r",
									"});\r",
									"\r",
									"var age =jsonData.age;\r",
									"console.log(age)\r",
									"\r",
									"pm.test(\"Проверить, что age в ответе равно age request (age вбить руками)\",function () {\r",
									" pm.expect(age).to.eql(\"24\")\r",
									"\r",
									"});\r",
									"\r",
									"var salary =jsonData.salary;\r",
									"console.log(salary)\r",
									"\r",
									"pm.test(\"Проверить, что salary в ответе равно salary request (salary вбить руками)\",function () {\r",
									" pm.expect(salary).to.eql(1000)\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// Спарсить request\r",
									"var req = request.data\r",
									"var resp_name = jsonData.name;\r",
									"var req_name = req.name \r",
									"\r",
									"console.log(resp_name)\r",
									"console.log(req_name)\r",
									"\r",
									"pm.test(\"Проверить, что name в ответе равно name request (name забрать из request)\",function () {\r",
									" pm.expect(resp_name).to.eql(req_name)\r",
									"});\r",
									"\r",
									"var resp_age = jsonData.age;\r",
									"var req_age = req.age;\r",
									"\r",
									"console.log(resp_age)\r",
									"console.log(req_age)\r",
									"\r",
									"pm.test(\"Проверить, что age в ответе равно age request (age забрать из request)\",function () {\r",
									" pm.expect(resp_age).to.eql(req_age)\r",
									"});\r",
									"\r",
									"var resp_salary = jsonData.salary;\r",
									"var req_salary = +req.salary;\r",
									"\r",
									"console.log(resp_salary)\r",
									"console.log(req_salary)\r",
									"\r",
									"pm.test(\"Проверить, что salary в ответе равно salary request (salary забрать из request.)\",function () {\r",
									" pm.expect(resp_salary).to.eql(req_salary)\r",
									"});\r",
									"\r",
									"// Вывести в консоль параметр family из response\r",
									"var resp_family=jsonData.family\r",
									"console.log(\"resp_family=\",resp_family)\r",
									"\r",
									"console.log(\"jsonData.family.u_salary_1_5_year=\",jsonData.family.u_salary_1_5_year)\r",
									"console.log(\"jsonData.salary*4=\",jsonData.salary*4)\r",
									"\r",
									"pm.test(\"Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\",function () {\r",
									" pm.expect(jsonData.family.u_salary_1_5_year).to.eql(jsonData.salary*4)\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Lena",
									"type": "text"
								},
								{
									"key": "age",
									"value": "24",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1000",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_3",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "/object_info_3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Спарсить response body в json\r",
									"var jsonData = pm.response.json();\r",
									"// Спарсить request\r",
									"var req_url = pm.request.url.query.toObject();\r",
									"\r",
									"var resp_name =jsonData.name;\r",
									"console.log(\"req_url=\",req_url.name) \r",
									"console.log(\"resp_name=\",resp_name)\r",
									"\r",
									"pm.test(\"Проверить, что name в ответе равно name request (name забрать из request)\",function () {\r",
									" pm.expect(req_url.name).to.eql(resp_name)\r",
									"\r",
									"});\r",
									"var resp_age =jsonData.age\r",
									"console.log(\"req_url=\",req_url.age) \r",
									"console.log(\"resp_age=\",resp_age)\r",
									"\r",
									"pm.test(\"Проверить, что age в ответе равно age request (age забрать из request)\",function () {\r",
									" pm.expect(req_url.age).to.eql(resp_age)\r",
									"\r",
									"});\r",
									"\r",
									"var resp_salary =jsonData.salary\r",
									"console.log(\"req_url=\",req_url.salary) \r",
									"console.log(\"resp_salary=\",resp_salary)\r",
									"\r",
									"pm.test(\"Проверить, что salary в ответе равно salary request (salary забрать из request)\",function () {\r",
									" pm.expect(+req_url.salary).to.eql(resp_salary)\r",
									"\r",
									"});\r",
									"// Вывести в консоль параметр family из response\r",
									"console.log(\"family=\",jsonData.family)\r",
									"\r",
									"pm.test(\"Проверить, что у параметра dog есть параметры name\",function () {\r",
									" pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
									"});\r",
									"pm.test(\"Проверить, что у параметра dog есть параметры age\",function () {\r",
									" pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
									"});\r",
									"var Dog_name=jsonData.family.pets.dog.name;\r",
									"var req = request.data;\r",
									"pm.test(\"Проверить, что параметр name имеет значение Luky\",function () {\r",
									"pm.expect(Dog_name).to.eql(\"Luky\")\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что параметр age имеет значение 4\",function () {\r",
									"pm.expect(jsonData.family.pets.dog.age).to.eql(4)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_3?name=Lena&age=24&salary=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "24"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/object_info_4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Спарсить response body в json\r",
									"var jsonData = pm.response.json();\r",
									"// Спарсить request\r",
									"var req_url = pm.request.url.query.toObject();\r",
									"\r",
									"var resp_name = jsonData.name;\r",
									"console.log(\"req_url=\",req_url.name) \r",
									"console.log(\"resp_name=\",resp_name)\r",
									"\r",
									"pm.test(\"Проверить, что name в ответе равно name request (name забрать из request)\",function () {\r",
									" pm.expect(req_url.name).to.eql(resp_name)\r",
									"\r",
									"});\r",
									"var resp_age =jsonData.age\r",
									"console.log(\"req_url=\",req_url.age) \r",
									"console.log(\"resp_age=\",resp_age)\r",
									"\r",
									"pm.test(\"Проверить, что age в ответе равно age из request (age забрать из request)\",function () {\r",
									" pm.expect(+req_url.age).to.eql(resp_age)\r",
									"});\r",
									"// Вывести в консоль параметр salary из request\r",
									"console.log(\"req_url_salary=\",req_url.salary)\r",
									"// Вывести в консоль параметр salary из response\r",
									"console.log(\"salary=\",jsonData.salary)\r",
									"\r",
									"// Вывести в консоль 0-й элемент параметра salary из response\r",
									"var resp_salary0 = jsonData.salary[0];\r",
									"console.log(\"resp_salary0= \", resp_salary0)\r",
									"\r",
									"// Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
									"var resp_salary1 = jsonData.salary[1];\r",
									"console.log(\"resp_salary1= \", resp_salary1)\r",
									"\r",
									"// Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
									"var resp_salary2 = jsonData.salary[2];\r",
									"console.log(\"resp_salary2= \", resp_salary2)\r",
									"\r",
									"pm.test(\" Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\",function () {\r",
									" pm.expect(+req_url.salary).to.eql(jsonData.salary[0])\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request)\",function () {\r",
									" pm.expect(req_url.salary*2).to.eql(+jsonData.salary[1])\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request)\",function () {\r",
									" pm.expect(req_url.salary*3).to.eql(+jsonData.salary[2])\r",
									"\r",
									"});\r",
									"// Передать в окружение переменную name\r",
									"pm.environment.set(\"name\", \"Lena\");\r",
									"// Передать в окружение переменную age\r",
									"pm.environment.set(\"age\", \"24\");\r",
									"// Передать в окружение переменную salary\r",
									"pm.environment.set(\"salary\", \"1000\");\r",
									"\r",
									"//  Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
									"for (var i in jsonData.salary){\r",
									"    console.log(\"Salary =\",jsonData.salary[i])\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/object_info_4?name=Lena&age=24&salary=1000",
							"host": [
								"{{url}}"
							],
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Lena"
								},
								{
									"key": "age",
									"value": "24"
								},
								{
									"key": "salary",
									"value": "1000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/user_info_2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Спарсить response body в json\r",
									"var jsonData = pm.response.json();\r",
									"// Спарсить request\r",
									"var req = request.data;\r",
									"\r",
									"pm.test(\"Проверить, что json response имеет параметр start_qa_salary\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"start_qa_salary\")\r",
									"});\r",
									"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_6_months\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\")\r",
									"});\r",
									"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_12_months\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\")\r",
									"});\r",
									"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_1.5_year\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\")\r",
									"});\r",
									"pm.test(\"Проверить, что json response имеет параметр qa_salary_after_3.5_years\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\")\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что json response имеет параметр person\",function () {\r",
									" pm.expect(jsonData).to.have.property(\"person\")\r",
									"});\r",
									"\r",
									"var req_salary = +req.salary\r",
									"\r",
									"console.log(\"req_salary=\",req_salary)\r",
									"console.log(\"jsonData.start_qa_salary=\",jsonData.start_qa_salary)\r",
									"\r",
									"pm.test(\"Проверить, что параметр start_qa_salary равен salary из request\",function () {\r",
									" pm.expect(jsonData.start_qa_salary).to.eql(req_salary)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что параметр qa_salary_after_6_months равен salary*2 из request\",function () {\r",
									" pm.expect(jsonData.qa_salary_after_6_months).to.eql(req_salary*2)\r",
									"\r",
									"});\r",
									"pm.test(\"Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request\",function () {\r",
									" pm.expect(jsonData.qa_salary_after_12_months).to.eql(req_salary*2.7)\r",
									"\r",
									"});\r",
									"console.log(\"qa_salary_after_1.5_year=\",jsonData[\"qa_salary_after_1.5_year\"])\r",
									"pm.test(\"Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request\",function () {\r",
									" pm.expect(jsonData[\"qa_salary_after_1.5_year\"]).to.eql(req_salary*3.3)\r",
									"\r",
									"});\r",
									"console.log(\"qa_salary_after_3.5_years=\",jsonData[\"qa_salary_after_3.5_years\"])\r",
									"pm.test(\"Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request\",function () {\r",
									" pm.expect(jsonData[\"qa_salary_after_3.5_years\"]).to.eql(req_salary*3.8)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что в параметре person, 1-й элемент из u_name равен salary из request\",function () {\r",
									" pm.expect(jsonData.person.u_name[1]).to.eql(req_salary)\r",
									"\r",
									"});\r",
									"var req_age = +req.age\r",
									"pm.test(\"Проверить, что параметр u_age равен age из request\",function () {\r",
									" pm.expect(jsonData.person.u_age).to.eql(req_age)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Проверить, что параметр u_salary_5_years равен salary*4.2 из request\",function () {\r",
									" pm.expect(jsonData.person.u_salary_5_years).to.eql(req_salary*4.2)\r",
									"\r",
									"});\r",
									"\r",
									"// Написать цикл который выведет в консоль по порядку элементы списка из параметра person\r",
									"for (var i in jsonData.person){\r",
									"    console.log(\"Person = \",jsonData.person[i])\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/user_info_2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}